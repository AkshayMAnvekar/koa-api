#!/usr/bin/env node

'use strict';

var _ = require('lodash');
var fs = require('fs');
var path = require('path');
var program = require('commander');
_.str = require('underscore.string');
_.str.inflection = require('inflection');

program
  .arguments('<name>')
  .action(function(name) {
    var className = _.str.classify(name);
    var underscored = _.str.underscored(name);
    var camelized = _.str.camelize(underscored);
    var tableName = _.str.inflection.pluralize(underscored);
    var modelsDir = path.join(__dirname, '..', 'src', 'models');

    var filePath = path.join(modelsDir, camelized + '.js');
    var indexPath = path.join(modelsDir, 'index.js');

    fs.writeFileSync(filePath, _modelTemplate(className, tableName));
    fs.writeFileSync(indexPath, _indexTemplate(modelsDir));
    console.log(`${className} model written to ${filePath}`);
  })
  .parse(process.argv);


function _modelTemplate(className, tableName) {
  return `'use strict';

var bookshelf = require('../db');

var ${className} = bookshelf.Model.extend({
  tableName: '${tableName}',
  hasTimestamps: true,
});

module.exports = bookshelf.model('${className}', ${className});`;
}

function _indexTemplate(dir) {
  var template = `'use strict'

module.exports = {
[FILES]
};`;

  var files = fs.readdirSync(dir);
  var requires = [];

  _.each(files, function(file) {
    if (_.str.isBlank(file) || file === 'index.js' || _.str.startsWith(file, '.')) {
      return;
    }

    var name = file.split('.')[0];
    var className = _.str.classify(name);
    requires.push(`  ${className}: require('./${name}'),`);
  });

  return template.replace('[FILES]', requires.join('\n'));
}
